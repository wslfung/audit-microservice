services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - AUDIT_SERVICE_SERVER_PORT=8080
      - AUDIT_SERVICE_SAML_ENTITY_ID=http://localhost:8080/saml
      - AUDIT_SERVICE_SAML_METADATA_URI=http://localhost:8080/saml/metadata
      - AUDIT_SERVICE_SAML_PRIVATE_KEY_LOCATION=classpath:saml/private.key
      - AUDIT_SERVICE_SAML_CERTIFICATE_LOCATION=classpath:saml/public.crt
      - AUDIT_SERVICE_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - AUDIT_SERVICE_KAFKA_GROUP_ID=auditor-group
      - AUDIT_SERVICE_KAFKA_AUTO_OFFSET_RESET=earliest
      - AUDIT_SERVICE_KAFKA_KEY_DESERIALIZER=org.apache.kafka.common.serialization.StringDeserializer
      - AUDIT_SERVICE_KAFKA_VALUE_DESERIALIZER=org.apache.kafka.common.serialization.StringDeserializer
      - AUDIT_SERVICE_MONGODB_HOST=mongodb
      - AUDIT_SERVICE_MONGODB_PORT=27017
      - AUDIT_SERVICE_MONGODB_DATABASE=audit
      - AUDIT_SERVICE_POSTGRES_URL=jdbc:postgresql://postgres:5432/audit_quartz
      - AUDIT_SERVICE_POSTGRES_USERNAME=postgres
      - AUDIT_SERVICE_POSTGRES_PASSWORD=postgres
      - AUDIT_SERVICE_POSTGRES_DRIVER=org.postgresql.Driver
      - AUDIT_LOG_ARCHIVE_DAYS_TO_KEEP=30
    depends_on:
      - kafka
      - mongodb
      - postgres
    networks:
      - app-network

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "changelog:1:1"
    depends_on:
      - zookeeper
    networks:
      - app-network

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: audit_quartz
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
  postgres_data:
